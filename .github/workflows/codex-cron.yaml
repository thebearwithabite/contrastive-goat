name: CodexCodegen
on:
  schedule:
    # every 6 hours; uses UTC. adjust if you want.
    - cron: "0 */6 * * *"
  workflow_dispatch: {}
permissions:
  contents: write
  pull-requests: write

jobs:
  codegen:
    runs-on: ubuntu-latest
    env:
      CODEX_API_KEY: ${{ secrets.CODEX_API_KEY }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: '20' }

      # Install deps for build/test gates
      - run: npm ci || npm i

      # Install your Codex CLI (replace this with your actual installer)
      - name: Install Codex CLI
        run: |
          echo ">>> Replace this with your Codex CLI install command"
          echo "e.g., npm i -g codex-cli"
          echo "or curl -L ... > /usr/local/bin/codex && chmod +x /usr/local/bin/codex"

      # Run scaffold from spec (uses the runner below)
      - name: Codex scaffold from spec
        run: bash agents/codex/run.sh scaffold specs/contrastive-goat.yaml || true

      # Run gates locally so the PR comes in green
      - name: Build & Test (ci:all)
        run: |
          npx playwright install --with-deps || true
          npm run ci:all

      - name: Assert metrics
        run: |
          if [ ! -f test-results/lighthouse-report.html ]; then
            echo "Lighthouse report not found: expected test-results/lighthouse-report.html"
            exit 1
          fi

          if [ ! -f test-results/lighthouse-score.txt ]; then
            echo "Lighthouse score file not found: expected test-results/lighthouse-score.txt"
            exit 1
          fi

          if [ ! -f test-results/loss.txt ]; then
            echo "LOSS file not found: expected test-results/loss.txt"
            exit 1
          fi

          if [ ! -f test-results/accuracy.txt ]; then
            echo "ACCURACY file not found: expected test-results/accuracy.txt"
            exit 1
          fi

          score=$(cat test-results/lighthouse-score.txt)
          if ! [[ "$score" =~ $number_pattern ]]; then
            echo "Invalid score format: $score"
            exit 1
          fi
          min_score=0.89
          if ! (( $(echo "$score >= $min_score" | bc -l) )); then
            echo "Lighthouse score $score is below expected >= $min_score"
            exit 1
          fi

          loss=$(cat test-results/loss.txt)
          if ! [[ "$loss" =~ ^[0-9]+([.][0-9]+)?$ ]]; then
            echo "Invalid loss format: $loss"
            exit 1
          fi
          if (( $(echo "$loss < 0.1" | bc -l) == 0 )); then
            echo "LOSS $loss is not < 0.1"
            exit 1
          fi

          acc=$(cat test-results/accuracy.txt)
          if ! [[ "$acc" =~ ^[0-9]+([.][0-9]+)?$ ]]; then
            echo "Invalid accuracy format: $acc"
            exit 1
          fi
          if ! awk "BEGIN {exit ($acc >= 0.95)}"; then
            echo "ACCURACY $acc is below expected >= 0.95"
            exit 1
          fi

          echo "Metrics passed: Lighthouse score $score >= $min_score, LOSS $loss < 0.1, ACCURACY $acc >= 0.95"

      # Open PR with any changes
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v6
        with:
          branch: codex/scaffold-${{ github.run_id }}
          title: "codex: scaffold from spec"
          commit-message: "codex: scaffold from spec"
          body: "Automated codegen. Please review."
          labels: automation,codex