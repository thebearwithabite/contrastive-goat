import React from 'react'
import items from '../../data/feelings_items.json'
import { track } from '../lib/analytics'
export default function Feelings(){const [clusters,setClusters]=React.useState({left:[],right:[]});const [selectedItem,setSelectedItem]=React.useState(null);function drop(where,item){setClusters(c=>({...c,[where]:[...c[where],item]}));track('feelings_drop',{to:where,id:item.id});setSelectedItem(null)}function selectItem(item){setSelectedItem(item)}const usedItems=new Set([...clusters.left,...clusters.right].map(i=>i.id));const availableItems=items.filter(i=>!usedItems.has(i.id));return(<div className='grid' style={{maxWidth:900,margin:'0 auto'}}><div className='card'><h2 style={{marginTop:0}}>Label the Feeling (without labels)</h2><p>Drag (click) items into two piles by <em>vibe</em>. There is no right answer — only structure.</p><div className='grid' style={{gridTemplateColumns:'repeat(3, 1fr)'}}><div><h4>Items</h4><div className='grid'>{availableItems.map(i=>(<button key={i.id} className={`btn${selectedItem?.id===i.id?' active':''}`} onClick={()=>selectItem(i)} aria-label={i.alt}>{i.alt}</button>))}</div>{selectedItem&&(<div style={{marginTop:'.5rem'}}><p style={{fontSize:'.9rem',opacity:.8}}>Selected: {selectedItem.alt}</p><div style={{display:'flex',gap:'.5rem'}}><button className='btn' onClick={()=>drop('left',selectedItem)}>→ Pile A</button><button className='btn' onClick={()=>drop('right',selectedItem)}>→ Pile B</button></div></div>)}</div><div><h4>Pile A</h4><div className='grid card'>{clusters.left.map(i=>(<div key={i.id} aria-label={i.alt}>{i.alt}</div>))}</div></div><div><h4>Pile B</h4><div className='grid card'>{clusters.right.map(i=>(<div key={i.id} aria-label={i.alt}>{i.alt}</div>))}</div></div></div><p style={{opacity:.8,marginTop:'.5rem'}}>Later, we reveal the latent structure you taught yourself.</p></div></div>)}
